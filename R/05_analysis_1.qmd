### Source functions

```{r}
source("../R/99_proj_func.R")
```

### Library:

```{r}
#| message: false
library("tidyverse")
library("ggridges")
library("viridis")
library("broom")
library("ggrepel")
library("corrplot")
library("plyr")
library("patchwork")
```

### loading:

```{r}
#| eval: true
#| message: false

ncbi_joined <- vroom::vroom("../data/04_ncbi_joined.tsv.gz",
                             delim = "\t")

placenta_joined <- vroom::vroom("../data/04_placenta_joined.tsv.gz",
                                delim = "\t")

maternal_joined <- vroom::vroom("../data/04_maternal_joined.tsv.gz",
                                delim = "\t")

cord_joined <- vroom::vroom("../data/04_cord_joined.tsv.gz",
                                delim = "\t")

smoking_fc_cord <- vroom::vroom("../data/04_smoking_fc_cord.tsv.gz",
                                 delim = "\t")

ncbi_joined |> 
  sample_n(5)
placenta_joined |> 
  sample_n(5)
```

### Fitting model to all sample types:

```{r}
regression_placenta <- create_models(placenta_joined)

regression_cord <- create_models(cord_joined)

regression_maternal <- create_models(maternal_joined)

```

### Volcano plot:

```{r}
#| warning: false

significant_placenta <- subset(regression_placenta , 
                          is_significant == "yes") |>
  dplyr::select(gene)

significant_cord <- subset(regression_cord , 
                          is_significant == "yes") |>
  dplyr::select(gene)

significant_maternal <- subset(regression_maternal , 
                          is_significant == "yes") |>
  dplyr::select(gene)

regression_placenta <- regression_placenta |>
  mutate(sample = "placenta")

regression_maternal <- regression_maternal |>
  mutate(sample = "maternal")

regression_cord <- regression_cord |>
  mutate(sample = "cord")

regression_all <- join_all(list(regression_placenta,
                                regression_maternal,
                                regression_cord),
                           type='full')

```

```{r}
regression_all |>
  ggplot(aes(x = gene,
             y = -log(p.value,10),
             label = ifelse(is_significant == "yes", 
                            gene, 
                            ""))) + 
  geom_point(aes(x = estimate, 
                 color = is_significant),
             alpha = .3,
             size = .2) +
  geom_hline(yintercept = 0) +
  theme_minimal(base_size = 10) +
  scale_x_continuous(limits=c(-.4,.4)) + 
  scale_y_continuous(limits=c(0,3.5)) + 
  labs(title = "Genes Associated with",
       subtitle = "Genes highlighted in turquoise were significant at a level of signifcance of p < .05",
       x = "Estimates",
       y = "-log10(p)") +
  theme(legend.position = "none",
        plot.title = element_text(hjust = .95),
        plot.subtitle = element_text(hjust = .95)) +
  facet_grid(~sample,
             labeller = as_labeller(c(placenta = "Samples obtained from placenta", 
                                      maternal = "Samples obtained from maternal blood",
                                      cord = "Samples obtained from cord blood")))

```

### Gene association plot:

blood_association_plot \| cord_association_plot \| placenta_association_plot

sample_blood_plot \| sample_cord_plot \| sample_placenta_plot

```{r}
# one plot of all genes and one plot with a sample of 20 or so genes
blood_association_plot <- regression_maternal |>
  filter(is_significant == "yes") |>
  ggplot(aes(y = fct_reorder(gene,
                             estimate))) + 
  geom_point(aes(x = estimate), 
             size = 1.5) +
  geom_errorbarh(aes(xmax = conf.high,
                     xmin = conf.low),
                     height = 1) +
  geom_vline(xintercept = 0) +
  theme_minimal(base_size = 10) +
  theme(legend.position = "bottom",
        axis.text.y = element_blank()) +
  labs(x = "Estimates (95%CIs)",
       y = "",)

cord_association_plot <- regression_cord |>
  filter(is_significant == "yes") |>
  ggplot(aes(y = fct_reorder(gene,
                             estimate))) + 
  geom_point(aes(x = estimate), 
             size = 1.5) +
  geom_errorbarh(aes(xmax = conf.high,
                     xmin = conf.low),
                     height = 1) +
  geom_vline(xintercept = 0) +
  theme_minimal(base_size = 10) +
  theme(legend.position = "bottom",
        axis.text.y = element_blank()) +
  labs(x = "Estimates (95%CIs)",
       y = "",)

placenta_association_plot <- regression_placenta |>
  filter(is_significant == "yes") |>
  ggplot(aes(y = fct_reorder(gene,
                             estimate))) + 
  geom_point(aes(x = estimate), 
             size = 1.5) +
  geom_errorbarh(aes(xmax = conf.high,
                     xmin = conf.low),
                     height = 1) +
  geom_vline(xintercept = 0) +
  theme_minimal(base_size = 10) +
  theme(legend.position = "bottom",
        axis.text.y = element_blank()) +
  labs(x = "Estimates (95%CIs)",
       y = "",)

sample_blood_plot <- regression_maternal |>
  filter(is_significant == "yes") |>
  sample_n(20) |>
  ggplot(aes(y = fct_reorder(gene,
                             estimate))) + 
  geom_point(aes(x = estimate), 
             size = 1.5) +
  geom_errorbarh(aes(xmax = conf.high,
                     xmin = conf.low),
                     height = 1) +
  geom_vline(xintercept = 0) +
  theme_minimal(base_size = 10) +
  theme(legend.position = "bottom") +
  labs(x = "Estimates (95%CIs)",
       y = "",)

sample_cord_plot <- regression_cord |>
  filter(is_significant == "yes") |>
  sample_n(20) |>
  ggplot(aes(y = fct_reorder(gene,
                             estimate))) + 
  geom_point(aes(x = estimate), 
             size = 1.5) +
  geom_errorbarh(aes(xmax = conf.high,
                     xmin = conf.low),
                     height = 1) +
  geom_vline(xintercept = 0) +
  theme_minimal(base_size = 10) +
  theme(legend.position = "bottom") +
  labs(x = "Estimates (95%CIs)",
       y = "",)

sample_placenta_plot <- regression_placenta |>
  filter(is_significant == "yes") |>
  sample_n(20) |>
  ggplot(aes(y = fct_reorder(gene,
                             estimate))) + 
  geom_point(aes(x = estimate), 
             size = 1.5) +
  geom_errorbarh(aes(xmax = conf.high,
                     xmin = conf.low),
                     height = 1) +
  geom_vline(xintercept = 0) +
  theme_minimal(base_size = 10) +
  theme(legend.position = "bottom") +
  labs(x = "Estimates (95%CIs)",
       y = "",)

(blood_association_plot | cord_association_plot | placenta_association_plot) +
  plot_annotation(title = "Genes Associated with Smoking")

(sample_blood_plot | sample_cord_plot | sample_placenta_plot) +
  plot_annotation(title = "Genes Associated with Smoking")


```

We can generally see that when a person smokes there seems to be a equal up and downregulation of diffrent genes. it is diffifult to see anything on the first plot so we try and sampling it. ofcourse the genes have a variety of diffrent function, so it makes sense that the up and downregulation is equally divided. but i we looked at a specific type of genes such as immunity, oxidation, metabolitic and so on. It might have a general up or down regulation

```{r}
num_genes_to_compare <- 6
genes_start_idx = 16

ncbi_joined |>
  select(smoking_status,
         genes_start_idx : (genes_start_idx + num_genes_to_compare)) |> 
  pivot_longer(names_to = "variable",
               values_to = "values",
               3:last_col()) |> 
  ggplot(aes(JMJD1A,
             values)) + 
  geom_point(aes(color = smoking_status)) + 
  facet_grid(. ~ variable,
             scales = "free_x") + 
  geom_smooth(method = "lm",
              se = FALSE) + 
  scale_y_continuous(trans = "log2") + 
  scale_x_continuous(trans = "log2") +
  labs(x="Gene expression of JMJD1A",
       y="Gene expression",
       title = "Gene expression of 6 genes plotted against the gene expression of gene JMJD1A")
```

### Gene expression correlation

```{r}

genes_cord_blood <- ncbi_joined |> 
  mutate(sample_source = str_match(title,
                                   "[[:upper:]]+")) |>
  filter(sample_source == "D") |> 
  select(16:30)

corrplot(cor(genes_pl),
  type = "upper"
)
```

### Log Fold Change

```{r}
# this has been done. df names are:

smoking_fc_all
smoking_fc_placenta
smoking_fc_maternal
smoking_fc_cord

######

gene_exp_cord_blood |> 
  slice_head(n=1)

gene_exp_cord_blood <- ncbi_joined |> 
  mutate(sample_source = str_match(title, "[[:upper:]]+")) |>
  filter(sample_source == "D") |> 
  select(smoking_status, "JMJD1A":"KRTAP19-1")

# calculate mean expressions of genes for both statuses of smoking
mean_expression_nonsmoker <- gene_exp_cord_blood |>
  filter(smoking_status == "non-smoker") |> 
  select(-1) |> 
  colMeans()
mean_expression_smoker <- gene_exp_cord_blood |>
  filter(smoking_status == "smoker") |> 
  select(-1) |> 
  colMeans()

gene_exp_cord_blood

t <- gene_exp_cord_blood |>
  filter(smoking_status == "smoker") |> 
  summarise(across(where(is.numeric), ~ mean(.x, na.rm = TRUE)))

# calculate log fold change
smoking_fold_change <-
  tibble(mean_expression_nonsmoker, mean_expression_smoker) |>  
  mutate(Gene = names(mean_expression_nonsmoker)) |> 
  relocate(Gene) |> 
  mutate(log_fold_change = log2(mean_expression_smoker) - log2(mean_expression_nonsmoker))

smoking_fold_change |>
  arrange(desc(log_fold_change))
```

```{r}
smoking_fold_change |> 
  arrange(desc(abs(log_fold_change)))

ncbi_smoking_logfc_cord |> 
  arrange(desc(abs(log_fold_change))) |> 
  slice_head(n=5)

```

```{r}
# Heatmap very much draft
ncbi_joined |>
  filter(smoking_status == "smoker") |>
  select(-colnames(ncbi_joined)[1:15]) %>%
  pivot_longer(col = -colnames(.)[1],
               names_to = "gene",
               values_to = "expr_level") |>
  ggplot(aes(x = as.factor(individual),
             y = gene,
             fill = expr_level)) + 
    geom_tile() +
    theme(legend.position="none")

```
