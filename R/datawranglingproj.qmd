### Library:

```{r}
#| message: false
library("tidyverse")
library("ggridges")
library("viridis")
library(httr)
library(jsonlite)
library("broom")
library("ggrepel")
```

### loading:

```{r}
#| eval: false
source("../R/99_proj_func.R")

feature_data <- vroom::vroom("../data/01_feature_data.tsv.gz", delim = "\t")
pheno_data <- vroom::vroom("../data/01_pheno_data.tsv.gz", delim = "\t")
norm_exprs <- vroom::vroom("../data/01_norm_exprs.tsv.gz", delim = "\t")
```

### wrangling fix exprs:

```{r}
wrangled_norm_exprs <- norm_exprs |> 
  pivot_longer(cols= -1) |> 
  pivot_wider(names_from = "gene_id",
              values_from = "value") |>
  rename("gene_id" = "name")
```

### wrangling fix pheno:

```{r}

clean_pheno_data <- pheno_data |>
  rename("gene_id" = geo_accession) |>
  rename("Mother_age_years" = age..years..ch1,
         "apgar_score" = apgar.score..5s..ch1, 
         "cord_blood_cotinine_ng_ml" = cord.blood.cotinine..ng.ml..ch1, 
         "gestational_age_weeks" = gestational.age..weeks..ch1, 
         "maternal_blood_cotinine_ng_ml" = maternal.blood.cotinine..ng.ml..ch1, 
         "maternal_bmi" = maternal.bmi.ch1, 
         "smoking_status" = smoking.status.ch1,
         "newborn_weight_g"= newborn.weight..g..ch1,
         "individual" = individual.ch1,
         "placental_weight_g" = placental.weight..g..ch1) |>
  dplyr::select(gene_id, 
         "Mother_age_years",
         "apgar_score",
         "cord_blood_cotinine_ng_ml",
         "gestational_age_weeks",
         "maternal_blood_cotinine_ng_ml",
         "maternal_bmi",
         "smoking_status",
         "newborn_weight_g",
         "sex",
         "individual",
         "placental_weight_g")
```

### joining:

```{r}
joined_tables <- clean_pheno_data |>
  full_join(wrangled_norm_exprs)
```

### plotting:

```{r}

clean_pheno_data |>
  ggplot(aes(`Mother_age_years`,
             fill=smoking_status)) +
  geom_boxplot()

clean_pheno_data |>
  ggplot(aes(maternal_bmi,
             fill=smoking_status)) +
  geom_boxplot()

clean_pheno_data |>
  ggplot(aes(`maternal_blood_cotinine_ng_ml`,
             fill=smoking_status)) +
  geom_boxplot()

clean_pheno_data |>
  ggplot(aes(`cord_blood_cotinine_ng_ml`,
             fill=smoking_status)) +
  geom_boxplot()

joined_tables |>
  sample_n(20) |>
  ggplot(aes(fill=smoking_status)) +
  geom_boxplot(aes(ENSG00000233927))

col_names <- joined_tables |>
  colnames()

joined_tables |>
  summarise(across(col_names[1]:col_names[100],
                   ~mean(., 
                         na.rm = TRUE)),
            .by = smoking_status)
```

### more wrangling:

```{r}

joined_colnames <- joined_tables |> 
  colnames()

auged_norm_exprs_00 <- joined_tables |> 
  dplyr::select(-joined_colnames[1:7],-
           joined_colnames[9:12]) |>
  mutate(is_smoker = case_when(str_detect(smoking_status, 
                                          "non") == 1 ~ 0,
                               str_detect(smoking_status, 
                                          "non") == 0 ~ 1), 
         .before = 1) |>
  dplyr::select(-smoking_status)

auged_norm_exprs_01 <- auged_norm_exprs_00 |>
  pivot_longer(cols = starts_with("EN"),
               names_to = "gene",
               values_to = "expr_level") |>
  mutate(log_2_expr_level =log2(expr_level)) |>
  dplyr::select(-expr_level)

auged_norm_exprs_02 <- auged_norm_exprs_01 |>
  group_by(gene) |>
  nest() |>
  ungroup()

# updating data frame. First we group rows by gene, and then we add a variable containing model fitted to expression level against early_metastasis variable
auged_norm_exprs_03 <- auged_norm_exprs_02 |>
  group_by(gene) |>
  mutate(model_object = map(.x = data,
                            .f = ~lm(formula = log_2_expr_level ~ is_smoker,
                                     data = .x))) |>
  
# using tidy function to turn model summary into a tibble instead of a list  
  mutate(model_object_tidy = map(.x = model_object,
                                 .f = ~ tidy(.x,
                                             conf.int = TRUE,
                                             conf.level = 0.5)))

# unnesting the tidy models, filtering to only get "slope"-coefficients for models and selecting desired variables
auged_norm_exprs_04 <- auged_norm_exprs_03 |>
  unnest(model_object_tidy) |>
  filter(term == "is_smoker") |>
  dplyr::select(gene, 
                p.value, 
                estimate, 
                conf.low, 
                conf.high) |>
  ungroup() |>
  
# creating variables "q-value" which is the p-value adjusted for multiple comparisons and "is_significant" which indicates whether observations are statistically significant when using a level of significance of 0.0
  mutate(q.value = p.adjust(p.value),
         is_significant = case_when(
           q.value < 0.2 ~ "yes",
           0.2 < q.value ~ "no"
         ))
```

### plotting:

```{r}
significant_labels <- subset(auged_norm_exprs_04 , 
                          is_significant == "yes") |>
  dplyr::select(gene)

auged_norm_exprs_04 |>
  ggplot(aes(x = gene,
             y = -log(p.value,10),
             label = ifelse(is_significant == "yes", 
                            gene, 
                            ""))) + 
  geom_point(aes(x = estimate, 
                 color = is_significant),
             alpha = .5,
             size=1) +
  geom_hline(yintercept = 0) +
  theme_minimal(base_size = 10) +
  labs(title = "Genes Associated with",
       subtitle = "Genes highlighted in turquoise were significant after multiple testing correction",
       x = "Estimates",
       y = "-log10(p)") +
  theme(legend.position = "none",
        plot.title = element_text(hjust = .95),
        plot.subtitle = element_text(hjust = .95))
```

## more rangling:

```{r}
joined_tables |> select(-joined_colnames[1:7],
                        -joined_colnames[9:12]) |>
  mutate(is_smoker = case_when(str_detect(smoking_status, 
                                          "non") == 1 ~ 0,
                               str_detect(smoking_status, 
                                          "non") == 0 ~ 1), 
         .before = 1) |>
  pivot_longer(cols = starts_with("EN"),
               names_to = "gene",
               values_to = "expr_level") |>
  sample_n(20) |>
  ggplot(aes(expr_level, 
             fill = smoking_status)) +
  geom_boxplot()
```
