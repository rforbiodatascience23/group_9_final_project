---
title: "Clean data"
format: html
editor: source
author: authors
---

### Source functions

```{r}
source("../R/99_proj_func.R")
```

### Libraries:

```{r}
#| message: false
library("tidyverse")
library(vroom)
```

### Load and initial view

```{r}
ncbi_data <- read_tsv("../data/01_ncbi_data.tsv.gz")
ncbi_annot_probes <- read_tsv("../data/01_ncbi_annot_probes.tsv.gz")
```

```{r}
ncbi_data |> 
  sample(5)
ncbi_annot_probes |>
  sample(5)
```

### Extract phenotype data from NCBI

```{r}
## Magnus
ncbi_dirty_pheno <- ncbi_data |> 
  as_tibble() |>
  filter(!str_detect(col_1, 
                     "ILMN")) |>
  filter(!str_detect(col_1, 
                     "ID_REF")) |>
  slice(41:n()) |>
  t()
# Rename coloums
colnames(ncbi_dirty_pheno) <- ncbi_dirty_pheno[1, ] |> 
  stringr::str_replace_all("!Sample_",
                           "")
# Remove first row
ncbi_dirty_pheno <- ncbi_dirty_pheno[-1, ] |> 
  as_tibble() |>
  rename_with(tolower, 
              .cols = everything()) 
colnames(ncbi_dirty_pheno)

# more data wrangling
ncbi_clean_pheno <- ncbi_dirty_pheno |>
  # Choose important colunms to further wrangle. 
  select(matches(
    "geo_accession|title|characteristics_ch1|v11|v12|v13|v14|v15|v16|v17|v18|v19|v20|v21|v22")) |>
  # mutate column name and variable string
  mutate(
    smoking_status = str_remove(v11, 
                                "smoking status: "),
    tissue = str_remove(characteristics_ch1, 
                        "tissue: "),
    age = as.numeric(str_remove(v12, 
                                "age \\(years\\): ")),
    maternal_bmi = as.numeric(str_remove(v13, 
                                         "maternal bmi: ")),
    parity = str_remove(v14, 
                        "parity: "),
    gestational_age = as.numeric(str_remove(v15, 
                                            "gestational age \\(weeks\\): ")),
    birth_type = str_remove(v16, 
                            "mode of delivery: "),
    placental_weight = as.numeric(str_remove(v17, 
                                             "placental weight \\(g\\): ")),
    newborn_weight = as.numeric(str_remove(v18, 
                                           "newborn weight \\(g\\): ")),
    apgar_score = as.numeric(str_remove(v19, 
                                        "apgar score \\(5s\\): ")),
    cotinine_conc_maternal = as.numeric(str_remove(v20, 
                                                   "maternal blood cotinine \\(ng/ml\\): ")),
    cotinine_conc_cord = as.numeric(str_remove(v21, 
                                               "cord blood cotinine \\(ng/ml\\): ")),
    individual = str_remove(v22, 
                            "individual: ")) |>
  # Keep new columns
  select(-matches("characteristics_ch1|v11|v12|v13|v14|v15|v16|v17|v18|v19|v20|v21|v22")) |>
  t() |> 
  as.data.frame() |>
  rename_with(~str_replace_all(., 
                               "V", 
                               ""), 
              .cols = everything()) |>
  t() |>
  as_tibble()

```

### Extract gene expression from NCBI data

```{r}
gene_exp_idx <- 89

ncbi_dirty_expr <- ncbi_data |> 
  slice(gene_exp_idx:nrow(ncbi_data))
  
colnames(ncbi_dirty_expr) <-
  ncbi_data |> 
  slice(88) |>
  unlist()
        
ncbi_dirty_expr <- ncbi_dirty_expr |> 
  rename(probe_id = ID_REF) |>
  mutate(across(-probe_id, 
                ~ as.numeric(.x)))

###### Nicer boxplot to show normalization
gene_exp_longer <- ncbi_dirty_expr  |> 
  select(1:10) |> 
  pivot_longer(
    cols = starts_with("GSM"),
    names_to = "sample_id",
    values_to = "gene_expression"
  )

ggplot(data = gene_exp_longer, 
       mapping = aes(x = sample_id, 
                     y = gene_expression)) +
  geom_boxplot()
```

### Split gene expression by source of the samples

```{r}
# extract important columns from annotation
gene_annotation <- ncbi_annot_probes |> 
  select(Symbol, 
         Probe_Id, 
         Definition, 
         Entrez_Gene_ID, 
         starts_with("Ontology"))

ncbi_clean_expression <- gene_annotation |> 
  select(Symbol, 
         Probe_Id) |> 
  right_join(ncbi_dirty_expr, 
             by = c('Probe_Id' = 'probe_id')) |> 
  rename(Gene = Symbol) |> 
  select(-Probe_Id)

# to know what material samples are
sample_source_table <- ncbi_clean_pheno |>
  select(geo_accession, 
         title) |>  
  mutate(sample_source = str_match(title, 
                                   "[[:upper:]]+")) |> 
  rename(sample_id = geo_accession) |> 
  select(-title)

# gene_expr_placenta
gene_expr_placenta <- get_gene_expr_by_source(ncbi_clean_expression, 
                                              sample_source_table, 
                                              "PL")

# gene_expr_maternal_blood
gene_expr_maternal_blood <- get_gene_expr_by_source(ncbi_clean_expression, 
                                                    sample_source_table, 
                                                    "M")

# gene_expr cord blood
gene_expr_cord_blood <- get_gene_expr_by_source(ncbi_clean_expression, 
                                                sample_source_table, 
                                                "D")

```

### Transposing:

```{r}
# transpose expression data
transposed_expr_data <- ncbi_clean_expression |> 
  distinct(Gene, .keep_all = TRUE) |>
  pivot_longer(cols = -Gene, names_to = "gene", values_to = "value") |>
  pivot_wider(names_from = "Gene", values_from = "value") |>
  rename("geo_accession" = gene)

ncbi_joined <- ncbi_clean_pheno |>
  full_join(transposed_expr_data)
```

### Write tsv-files containing the data frames

```{r}
write_tsv(x = ncbi_clean_pheno,
          file = "../data/02_ncbi_clean_pheno.tsv.gz")

write_tsv(x = transposed_expr_data,
          file = "../data/02_ncbi_clean_expression.tsv.gz")

write_tsv(x = ncbi_joined,
          file = "../data/04_ncbi_joined.tsv.gz")

write_tsv(x = gene_expr_cord_blood,
          file = "../data/02_gene_expr_cord_blood.tsv.gz")

write_tsv(x = gene_expr_maternal_blood,
          file = "../data/02_gene_expr_maternal_blood.tsv.gz")

write_tsv(x = gene_expr_placenta,
          file = "../data/02_gene_expr_placenta.tsv.gz")
```
